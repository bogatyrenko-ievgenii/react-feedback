{"version":3,"sources":["feedback-statistics/feedback-statistics.js","buttons/buttons.js","app/App.js","index.js","app/App.module.css","buttons/buttons.module.css"],"names":["FeedbackStatistics","good","neutral","bad","total","positivePercentage","Buttons","options","onHandleBtnClick","className","styles","buttons","Object","keys","map","option","index","value","onClick","event","button","createBtns","App","props","countTotalFeedback","state","countPositiveFeedbackPercentage","Math","floor","target","setState","console","log","this","main","title","list","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"8PAqBeA,EAnBY,SAAC,GAAqD,IAApDC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,IAAKC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,mBACtD,OACE,qCACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,wDAA2BC,EAA3B,W,gBCUSC,EAjBC,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,iBAUvB,OACI,qBAAKC,UAAWC,IAAOC,QAAvB,SARe,SAACJ,GAEhB,OADqBK,OAAOC,KAAKN,GACXO,KAAI,SAACC,EAAQC,GAC/B,OAAO,wBAAoBC,MAAOF,EAAQG,QAAS,SAACC,GAAWX,EAAiBW,IAASV,UAAWC,IAAOU,OAApG,SAA6GL,GAAhGC,MAMnBK,CAAWd,MCsDTe,E,kDA5Db,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAQRC,mBAAqB,WACnB,MAA6B,EAAKC,MAClC,OADA,EAAMxB,KAAN,EAAYC,QAAZ,EAAqBC,KAVJ,EAcnBuB,gCAAkC,WAChC,OAAOC,KAAKC,MAAyB,IAAlB,EAAKH,MAAMxB,KAAc,EAAKuB,uBAfhC,EAkBnBhB,iBAAmB,SAACW,GAClB,OAAQA,EAAMU,OAAOZ,OACnB,IAAK,MACH,EAAKa,UAAS,kBAAc,CAAE3B,IAAhB,EAAGA,IAAwB,MACzC,MACF,IAAK,OACH,EAAK2B,UAAS,kBAAe,CAAE7B,KAAjB,EAAGA,KAA2B,MAC5C,MACF,IAAK,UACH,EAAK6B,UAAS,kBAAkB,CAAE5B,QAApB,EAAGA,QAAoC,MACrD,MACF,QACE6B,QAAQC,IAAI,aA5BhB,EAAKP,MAAQ,CACXxB,KAAM,EACNC,QAAS,EACTC,IAAK,GALU,E,0CAmCnB,WACE,MAA6B8B,KAAKR,MAA5BxB,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,QAASC,EAArB,EAAqBA,IACrB,OACE,sBAAKM,UAAWC,IAAOwB,KAAvB,UACE,oBAAIzB,UAAWC,IAAOyB,MAAtB,mCACA,cAAC,EAAD,CAAS5B,QAAS0B,KAAKR,MAAOjB,iBAAkByB,KAAKzB,mBACrD,4CACA,oBAAIC,UAAWC,IAAO0B,KAAtB,SACiC,IAA9BH,KAAKT,qBACJ,mDAEA,cAAC,EAAD,CACEvB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO6B,KAAKT,qBACZnB,mBAAoB4B,KAAKP,6C,GApDrBW,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,KAAO,kBAAkB,KAAO,kBAAkB,MAAQ,qB,kBCA5ED,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,MAAQ,0B","file":"static/js/main.5f819038.chunk.js","sourcesContent":["import { number } from \"prop-types\";\n\nconst FeedbackStatistics = ({good, neutral, bad, total, positivePercentage}) => {\n  return (\n    <>\n      <li>good: {good}</li>\n      <li>neutral: {neutral}</li>\n      <li>bad: {bad}</li>\n      <li>total: {total}</li>\n      <li>positive feedback is: {positivePercentage}%</li>\n    </>\n  );\n};\n\nFeedbackStatistics.propTypes = {\n    good: number.isRequired,\n    neutral: number.isRequired,\n    bad: number.isRequired,\n    total: number.isRequired,\n    positivePercentage: number.isRequired\n  }\nexport default FeedbackStatistics;","import styles from './buttons.module.css';\n\nconst Buttons = ({options, onHandleBtnClick}) => {\n\n    \n    const createBtns = (options) => {\n        let arrOptionsName = Object.keys(options);\n        return arrOptionsName.map((option, index) => {\n            return <button key={index} value={option} onClick={(event) => {onHandleBtnClick(event)}} className={styles.button}>{option}</button>\n        });\n    }\n\n    return (\n        <div className={styles.buttons}>\n            {createBtns(options)}\n        </div>\n    )\n}\n\nexport default Buttons;","import React, { Component } from \"react\";\n\nimport styles from \"./App.module.css\";\n\nimport FeedbackStatistics from \"../feedback-statistics/feedback-statistics\";\nimport Buttons from \"../buttons/buttons\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0,\n    };\n  }\n\n  countTotalFeedback = () => {\n    let { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.floor((this.state.good * 100) / this.countTotalFeedback());\n  };\n\n  onHandleBtnClick = (event) => {\n    switch (event.target.value) {\n      case \"bad\":\n        this.setState(({ bad }) => ({ bad: bad + 1 }));\n        break;\n      case \"good\":\n        this.setState(({ good }) => ({ good: good + 1 }));\n        break;\n      case \"neutral\":\n        this.setState(({ neutral }) => ({ neutral: neutral + 1 }));\n        break;\n      default:\n        console.log(\"Nothing\");\n        break;\n    }\n  };\n\n  render() {\n    let { good, neutral, bad } = this.state;\n    return (\n      <div className={styles.main}>\n        <h1 className={styles.title}>Please leave feedback</h1>\n        <Buttons options={this.state} onHandleBtnClick={this.onHandleBtnClick} />\n        <h2>Statistics</h2>\n        <ul className={styles.list}>\n          {this.countTotalFeedback() === 0 ? (\n            <li>No feedback given</li>\n          ) : (\n            <FeedbackStatistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"App_list__VpM9w\",\"main\":\"App_main__3cTDB\",\"title\":\"App_title__3DhxQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"buttons_buttons__1SX9j\",\"button\":\"buttons_button__3YGz1\",\"hover\":\"buttons_hover__zi9kt\"};"],"sourceRoot":""}